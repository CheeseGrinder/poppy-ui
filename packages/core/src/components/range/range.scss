@use "@poppy/global" as theme;

/**
 * @prop --track-size: Height of the range track
 * @prop --track-color: Color of the unselected part
 * @prop --active-track-color: Color of active part
 *
 * @prop --thumb-size: Height of the active range track
 * @prop --thumb-color: Height of the active range track
 *
 * @prop --border-radius: Border radius
 *
 */

@mixin track {
  width: 100%;
  height: var(--track-size);
  border-radius: var(--border-radius, #{theme.use_radius(xl)});
  background-color: var(--track-color, oklch(var(--base-content) / var(--track-opacity, 0.2)));
}
@mixin thumb {
  width: var(--thumb-size);
  height: var(--thumb-size);
  border-style: none;
  border-radius: var(--border-radius, #{theme.use_radius(xl)});

  --filler-size: 50rem;
  --active-track-size: calc(var(--filler-size) * -1 - var(--filler-offset));

  background-color: var(--thumb-color);
  box-shadow:
    0 0 0 3px var(--active-track-color) inset,
    var(--focus-shadow, 0 0),
    var(--active-track-size) 0 0 var(--filler-size);
}

// Range
// ----------------------------------------------------------------

:host {
  --thumb-color: #{theme.use_color("base.100")};
  --border-radius: #{theme.use_radius(xl)};

  width: 100%;

  > input {
    appearance: none;
    -webkit-appearance: none;

    width: 100%;
    height: var(--thumb-size);
    margin: 0;

    overflow: hidden;
    border-radius: var(--border-radius);
    background-color: transparent;

    color: var(--active-track-color);

    cursor: pointer;

    &:focus {
      outline: none;
    }
    &:focus-visible {
      --focus-shadow: 0 0 0 6px var(--thumb-color) inset, 0 0 0 2rem var(--active-track-color) inset;
    }

    &::-webkit-slider-runnable-track {
      @include track;
    }
    &::-webkit-slider-thumb {
      @include thumb;

      appearance: none;
      -webkit-appearance: none;

      position: relative;
      top: 50%;
      transform: translateY(-50%);
    }
    &::-moz-range-track {
      @include track;
    }
    &::-moz-range-thumb {
      @include thumb;
    }
  }
}

// Range Size
// ----------------------------------------------------------------

:host([size="xs"]) {
  --track-size: 0.25rem;
  --thumb-size: 1rem;
  --filler-offset: 0.4rem;
}
:host([size="sm"]) {
  --track-size: 0.25rem;
  --thumb-size: 1.25rem;
  --filler-offset: 0.5rem;
}
:host([size="md"]),
:host(:not([size])) {
  --track-size: 0.5rem;
  --thumb-size: 1.5rem;
  --filler-offset: 0.6rem;
}
:host([size="lg"]) {
  --track-size: 1rem;
  --thumb-size: 2rem;
  --filler-offset: 1rem;
}

// Range Color
// ----------------------------------------------------------------

@mixin generate-color($colors...) {
  @each $color in $colors {
    $base: use_color("#{$color}.base", var(--active-track-opacity, 1));

    :host([color="#{$color}"]) {
      --active-track-color: #{$base};
    }
  }
}
@include generate-color(primary, secondary, accent, info, success, warning, error);

:host(:not([color])) {
  $color: use_color("base.content", var(--track-opacity, 0.2));
  $active: use_color("base.content", var(--active-track-opacity, 1));

  --track-color: #{$color};
  --active-track-color: #{$active};
}

// Range State
// ----------------------------------------------------------------

:host([disabled]) > input {
  $active: use_color("base.content", var(--active-track-opacity, 1));

  --active-track-color: #{$active};
  cursor: not-allowed;

  opacity: var(--opacity, 0.2);
}
