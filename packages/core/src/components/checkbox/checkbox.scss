@use "@poppy/utils/input";
@use "@poppy/global" as theme;

/**
 * @prop --border-radius: Change border radius
 * @prop --border-color: Change border color
 *
 * @prop --background: Change background color
 * @prop --checkmark-color: Change checkmark color
 *
 * @prop --animation: Change animation duration
 */

// Checkbox
// ----------------------------------------------------------------

:host {
  --border-radius: #{theme.use_radius(md)};
  --border-color: #{theme.use_color("base.content", 0.2)};

  --background: #{theme.use_color("base.content")};
  --checkmark-color: #{theme.use_color("base.100")};

  --animation: 0.2s ease-out;

  @include input.label;

  display: inline-flex;
  flex-shrink: 0;
  align-items: center;
  justify-content: space-between;
  gap: 4px;

  input {
    appearance: none;
    margin: 0;
    border: 1px solid var(--border-color);
    border-radius: var(--border-radius);
    cursor: pointer;

    &:focus-visible {
      outline-color: var(--background);
      outline-style: solid;
      outline-width: 2px;
      outline-offset: 2px;
    }
    &:checked {
      background-image: linear-gradient(-45deg, transparent 65%, var(--background) 65.99%),
        linear-gradient(45deg, transparent 75%, var(--background) 75.99%),
        linear-gradient(-45deg, var(--background) 40%, transparent 40.99%),
        linear-gradient(
          45deg,
          var(--background) 30%,
          var(--checkmark-color) 30.99%,
          var(--checkmark-color) 40%,
          transparent 40.99%
        ),
        linear-gradient(-45deg, var(--checkmark-color) 50%, var(--background) 50.99%);
      background-repeat: no-repeat;
      background-color: var(--background);
      animation: checkmark var(--animation);
    }
  }

  @keyframes checkmark {
    0% {
      background-position-y: 5px;
    }
    50% {
      background-position-y: -2px;
    }
    100% {
      background-position-y: 0;
    }
  }
}

// Checkbox placement
// ----------------------------------------------------------------

// start is the default in flex so no css needed here.
:host([placement="start"]) {
  input {
    margin-inline-end: auto;
  }
}
:host([placement="end"]) {
  flex-direction: row-reverse;

  input {
    margin-inline-start: auto;
  }
}

// Checkbox size
// ----------------------------------------------------------------

:host([size="xs"]),
:host(.in-list.in-list-xs) {
  input {
    width: 1rem;
    height: 1rem;
  }
}
:host([size="sm"]),
:host(.in-list.in-list-sm) {
  input {
    width: 1.25rem;
    height: 1.25rem;
  }
}
:host([size="md"]),
:host(.in-list.in-list-lg) {
  input {
    width: 1.5rem;
    height: 1.5rem;
  }
}
:host([size="lg"]),
:host(.in-list.in-list-lg) {
  input {
    width: 2rem;
    height: 2rem;
  }
}

// Checkbox Color
// ----------------------------------------------------------------

@mixin generate-color($colors...) {
  @each $color in $colors {
    $base: use_color("#{$color}.base");
    $border: use_color("#{$color}.base", 0.2);
    $text: use_color("#{$color}.content");

    :host([color="#{$color}"]) {
      --background: #{$base};
      --border-color: #{$border};
      --checkmark-color: #{$text};
    }
  }
}
@include generate-color(primary, secondary, accent, info, success, warning, error);

:host(:not([color])) > input {
  --background: #{theme.use_color("base.content")};
  --border-color: #{theme.use_color("base.content", 0.2)};
  --checkmark-color: #{theme.use_color("base.100")};
}

// Checkbox status
// ----------------------------------------------------------------

:host([disabled]) > input {
  --border-color: transparent;
  --background: #{theme.use_color("base.content")};
  background-image: linear-gradient(-45deg, transparent 65%, var(--background) 65.99%),
    linear-gradient(45deg, transparent 75%, var(--background) 75.99%),
    linear-gradient(-45deg, var(--background) 40%, transparent 40.99%),
    linear-gradient(
      45deg,
      var(--background) 30%,
      var(--checkmark-color) 30.99%,
      var(--checkmark-color) 40%,
      transparent 40.99%
    ),
    linear-gradient(-45deg, var(--checkmark-color) 50%, var(--background) 50.99%);

  background-color: var(--background);
  cursor: not-allowed;
  opacity: 0.2;
}
:host([indeterminate]) > input {
  background-image: linear-gradient(90deg, transparent 80%, var(--background) 80%),
    linear-gradient(-90deg, transparent 80%, var(--background) 80%),
    linear-gradient(
      0deg,
      var(--background) 43%,
      var(--checkmark-color) 43%,
      var(--checkmark-color) 57%,
      var(--background) 57%
    );
  background-repeat: no-repeat;
  background-color: var(--background, use_color("base.content"));
  animation: checkmark var(--animation-duration, 0.2s) ease-out;
}

// Checkbox Context
// ----------------------------------------------------------------

:host(.in-item) {
  grid-column: span 2;

  > .label {
    padding-inline-start: 0;
  }
}
