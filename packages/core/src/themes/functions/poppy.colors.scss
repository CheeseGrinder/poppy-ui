@use "sass:string";
@use "sass:list";
@use "sass:map";
@use "@poppy/generator" as theme;

// Gets the active color's css variable from a variation. Alpha is optional.
// --------------------------------------------------------------------------------------------
// Example usage:
// current_color(base.100) => var(--base)
// current_color(base.content, 90%) => oklch(var(--base-content-oklch) calc(100% - 90%), transparent)
// --------------------------------------------------------------------------------------------
@function current_color($variation, $alpha: null) {
  @if $alpha == null {
    @return var(--#{$variation});
  } @else {
    @return oklch(var(--ion-color-#{$variation}-oklch) / #{$alpha});
  }
}

// Gets the specific color's css variable from the name and variation. Alpha/rgb are optional.
// --------------------------------------------------------------------------------------------
// Example usage:
// use_color(primary, base) => var(--primary, oklch(0.6569 0.196 275.75))
// use_color(secondary, content) => var(--secondary-content, oklch(0.1496 0.052 342.55))
// use_color(primary, base, 0.5) => oklch(var(--primary-oklch, 0.6569 0.196 275.75) / 0.5)
// --------------------------------------------------------------------------------------------
@function use_color($color, $alpha: 0%, $oklch: false) {
  $colorArr: string.split($color, ".");
  $name: list.nth($colorArr, 1);
  $variant: list.nth($colorArr, 2);

  $values: map-get(theme.$colors, $name);
  @if $values == null {
    @error $name "does not exist in theme colors";
  }

  $value: map-get($values, $variant);
  @if $value == null {
    @error $variant "does not exist in theme colors " $name;
  }

  $css-var: --#{$name};

  @if ($variant != base) {
    $css-var: --#{$name}-#{$variant};
  }

  @if ($alpha) {
    @return color-mix(in oklab, var(#{$css-var}, $value) calc(100% - $alpha), transparent);
  }

  @if ($oklch) {
    @return oklch(var(#{$css-var}-oklch, $value));
  }

  @return var(#{$css-var}, oklch($value));
}

// Mixes a color with black to create its shade.
// --------------------------------------------------------------------------------------------
@function use_color_shade($color) {
  @return color-mix(in oklab, oklch(#{$color}), #000 10%);
}

// Mixes a color with white to create its tint.
// --------------------------------------------------------------------------------------------
@function use_color_tint($color) {
  @return color-mix(in oklab, oklch(#{$color}), #fff 10%);
}
